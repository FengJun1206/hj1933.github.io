<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JsFeng&#39;s Blog</title>
  
  
  <link href="/rss2.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-10T14:50:46.525Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JsFeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo blog</title>
    <link href="http://yoursite.com/2017/10/10/hexo-blog-1/"/>
    <id>http://yoursite.com/2017/10/10/hexo-blog-1/</id>
    <published>2017-10-10T14:32:55.000Z</published>
    <updated>2017-10-10T14:50:46.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、hexo是什么："><a href="#1、hexo是什么：" class="headerlink" title="1、hexo是什么："></a>1、hexo是什么：</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a href="https://hexo.io" target="_blank" rel="external">hexo官网</a></p><p>  <img src="http://upload-images.jianshu.io/upload_images/4209226-81c675b08828606c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hexo文件目录结构">   </p><h1 id="2、搭建流程："><a href="#2、搭建流程：" class="headerlink" title="2、搭建流程："></a>2、搭建流程：</h1><ul><li>配置搭建环境（含node.js、Git和github账户的申请配置）  </li><li>安装hexo  </li><li>配置hexo</li><li>将hexo与github page联系起来</li><li>发布文章</li><li>主题配置</li><li>博客优化</li><li>绑定域名  </li></ul><h1 id="3、node-js-安装"><a href="#3、node-js-安装" class="headerlink" title="3、node.js 安装"></a>3、node.js 安装</h1><p><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="external">Windows Installer 64-bit</a>  </p><p><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="external">Windows Installer 32-bit</a>  </p><p>一路保持默认即可，安装结束后，检查组件是否安装好，同时按win（windows键）+R键，输入cmd（或者在开始输入CMD，右键管理员允许），打开命令窗口。<br>windows运行界面  </p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-baa0d92e8171efaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><p>在命令窗口输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">node -v  </div><div class="line">npm -v```  </div><div class="line"></div><div class="line"></div><div class="line">结果如下图，则表示node.js安装成功  </div><div class="line"></div><div class="line"> ![](http://upload-images.jianshu.io/upload_images/4209226-bbd2482a705e5094.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line"></div><div class="line"># 4、 安装Git：  </div><div class="line"></div><div class="line">&gt; [Git官网地址](https://git-scm.com/downloads )  </div><div class="line"></div><div class="line"></div><div class="line">安装默认即可，要注意的是在选择PATH选项时，建议按照下图选择，这样会使得Git在安装的时候会在系统PATH中加入Git的路径，可以直接调用CMD。  </div><div class="line"></div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-1f5aca1e08b652f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class="line"></div><div class="line">检查安装是否正确，输入以下命令：  </div><div class="line">```  </div><div class="line">git --version ```  </div><div class="line"></div><div class="line"></div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-0d1a4891a27a2516.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)   </div><div class="line"></div><div class="line"></div><div class="line"># 5、github账户注册和配置：</div><div class="line"></div><div class="line">&gt; [官网地址](https://github.com/)</div><div class="line"></div><div class="line">输入自己的用户名、邮箱、密码，注册完毕后，一定要去自己注册的邮箱中确认，否则不能使用gh-page。  </div><div class="line"></div><div class="line">&gt; 创建代码库：  </div><div class="line"></div><div class="line">登录进去后，点击右上角的+号，选择New repository：  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-3b18ee9a2345b932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">Repository name（仓库名字）一定要填与自己github账户名一样的名字，不然后续会有些麻烦，此处因为我已经创建了。  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-94ef38a62b1d0e74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">&gt; 代码库设置  </div><div class="line"></div><div class="line">进入你的仓库后，选择setting，如下图所示：  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-62f4ed7e3f3d4953.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">下拉找到Github Pages，找到Source，选择master branch，再点击save保存，过一会会生成一个github pages网址。  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-be4a215f803ca991.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line"></div><div class="line"># 6、 安装配置hexo：   </div><div class="line">&gt; 安装hexo</div><div class="line"></div><div class="line">打开git brash或者cmd控制台</div><div class="line"></div><div class="line">+ 安装hexo依赖  </div><div class="line"></div><div class="line">```  </div><div class="line">npm install -g hexo-cli```  </div><div class="line"></div><div class="line"></div><div class="line">+ 安装install 组件  </div><div class="line"></div><div class="line">```  </div><div class="line">npm install hexo --save ```  </div><div class="line"></div><div class="line"></div><div class="line">+ 查看版本</div></pre></td></tr></table></figure></p><p>hexo -v```  </p><p>如下图所示，则表示安装成功<br><img src="http://upload-images.jianshu.io/upload_images/4209226-5c7f26fad73a622e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><blockquote><p><strong>配置hexo</strong>  </p></blockquote><ul><li>hexo初始化</li></ul><p>使用命令切换到你需要存放本地仓库的磁盘，然后在磁盘根目录新建文件夹（本地仓库）。<br>假如你在E盘根目录新建一个文件夹（**此处文件夹名必须和你的github新建的仓库名（Repository name）一致）  </p><pre><code>E:    #切换到E盘hexo init xx.github.io     #新建本地仓库</code></pre><p>初始化完毕后，在E盘根目录会看到一个xx.github.io的文件夹，这就是你的本地仓库。  </p><ul><li>安装npm包  </li></ul><pre><code>npm install</code></pre><ul><li>生成  </li></ul><pre><code>hexo g   #hexo g 是hexo generate的简写</code></pre><ul><li>启动服务预览  </li></ul><pre><code>hexo s   #hexo s 是hexo server的简写</code></pre><p>上述也可以写成  </p><pre><code>hexo s -g</code></pre><p>当完成上述操作后提示如下，即可访问http:localhost:4000/   </p><pre><code>INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code></pre><blockquote><p><strong>填坑</strong>  </p></blockquote><p>理论上到此处就可以访问http:localhost:4000/，但是事与愿违，4000端口往往被占用，导致不能访问，不过官方也给出了解决方法:<a href="https://hexo.io/zh-cn/docs/server.html#自定义-IP" target="_blank" rel="external">https://hexo.io/zh-cn/docs/server.html#自定义-IP</a><br>hexo3.0后的版本，由于服务器是独立成个别模块，所以首先需要安装hexo-server  </p><pre><code>npm install hexo-server --save</code></pre><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。  </p><pre><code>hexo server</code></pre><p>再更改端口  </p><pre><code>hexo server -p 5000 #更改为5000端口</code></pre><p>在浏览器输入http:localhost:5000/即可访问  </p><h1 id="7、将hexo和github关联起来："><a href="#7、将hexo和github关联起来：" class="headerlink" title="7、将hexo和github关联起来："></a>7、将hexo和github关联起来：</h1><ul><li>配置git个人信息：  </li></ul><p>第一次使用git的话，需要配置用户名与邮箱地址：  </p><pre><code>git config --global user.name &quot;XXX&quot;git config --global user.email &quot;XXX@XXXcom&quot;</code></pre><p>检查是否有SSH，没有的话需要在github新建  </p><pre><code>cd ~/.ssh   #检查ls          #查看</code></pre><p>如果有的话，会有两个文件，如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4209226-6d009cf4c555c0c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>生成新的密钥  </li></ul><pre><code>ssh-keygen -t rsa -C &quot;XXX@XXXcom&quot;</code></pre><ul><li>将SSH Key 添加到ssh-agent</li></ul><pre><code>eval $(ssh-agent -s)</code></pre><ul><li>查看SSH返回路径  </li></ul><pre><code>ssh-add ~/.ssh/id_rsa</code></pre><p>添加成功，会返回路径  </p><pre><code>Identity added: /c/User/Administator/.ssh/id_rsa (/c/Users/Administator/.ssh/id_rsa)</code></pre><p>根据地址找到这两个文件<br><img src="http://upload-images.jianshu.io/upload_images/4209226-f2be6983ecb919db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>把SSH添加到github上  </li></ul><p>打开github，右上角选择setting，再选择SSH and GPG keys，选择New SSH key（添加SSH key），将id_rsa.pub的文件拷贝到key中，最后Add SSH key即可。</p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-6915fe56cf8f835c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>验证SSH  </li></ul><pre><code>ssh -T git@github.com</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/4209226-796dd612749d9951.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>配置Deployment  </li></ul><p>找到本地仓库（xx.github.io）,打开找到_config.yml文件，（建议使用Notepad++编辑），再找到deploy，配置如下：<br><img src="http://upload-images.jianshu.io/upload_images/4209226-8241abfce57fb23e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>git@github.com都是一致的，后面的则分别是github帐户名、仓库名<br>图上coding地址为使用coding加速后才添加的，此处可不添加<br>修改完毕后保存，并使用命令保存，否则报错：  </p><pre><code>npm install hexo-deployer-git --save</code></pre><h1 id="8、发布文章-："><a href="#8、发布文章-：" class="headerlink" title="8、发布文章 ："></a>8、发布文章 ：</h1><ul><li>新建一篇名为article title的博客：  <pre><code>hexo new post &quot;article title&quot;</code></pre>在我的电脑的目录下 E:\xx.github.io\source\ _posts 将会看到 article title.md 文件（打开.md文件，windows推荐使用markdownpad2）  </li><li>生成部署：  <pre><code>hexo clean  hexo g                 #生成hexo d                 #部署  hexo d -g            #也可以只有一步，在部署前先生成</code></pre>部署完毕后即可访问博客：<a href="https://xx.github.io/" target="_blank" rel="external">https://xx.github.io/</a>  </li></ul><h1 id="9、主题配置："><a href="#9、主题配置：" class="headerlink" title="9、主题配置："></a>9、主题配置：</h1><blockquote><p>详情请见这篇文章：<a href="http://www.jianshu.com/p/d350dec39078" target="_blank" rel="external">NexT主题配置</a>  </p></blockquote><h1 id="10、博客优化："><a href="#10、博客优化：" class="headerlink" title="10、博客优化："></a>10、博客优化：</h1><p>由于诸多原因导致国内访问github速度很慢，有时更新一篇博客，或者改动一些配置，需要很长时间才能加载出来，所以我们可以对博客进行一些优化，提高加载速度。<br>详情请见下面这篇文章：  </p><blockquote><p><a href="http://www.jianshu.com/p/414ca84237ea" target="_blank" rel="external">http://www.jianshu.com/p/414ca84237ea</a>  </p></blockquote><h1 id="11、绑定域名："><a href="#11、绑定域名：" class="headerlink" title="11、绑定域名："></a>11、绑定域名：</h1><p>一般使用hexo搭建博客后，博客地址大多为：<a href="https://xx.github.io之类，一来是不好听没有个性，二来是不方便管理，三是速度慢。" target="_blank" rel="external">https://xx.github.io之类，一来是不好听没有个性，二来是不方便管理，三是速度慢。</a>  </p><blockquote><p>购买域名  </p></blockquote><p><strong>比如国外的：<a href="https://www.godaddy.com/" target="_blank" rel="external">godaddy</a>、<a href="http://name.com/" target="_blank" rel="external">Name</a>等；国内的：或<a href="http://www.xinnet.com/" target="_blank" rel="external">新网</a>、<a href="http://www.xinnet.com/" target="_blank" rel="external">万网</a>、<a href="http://www.iisp.com/" target="_blank" rel="external">耐思尼克</a></strong>……<br>我是选择的阿里云（万网），以下介绍的也是阿里云的域名：<br>输入你 想要的域名，选择未注册的域名，有不同的套餐，一年几年。  </p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-5af5b534d2890bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="购买域名">  </p><ul><li>域名解析<br><img src="http://upload-images.jianshu.io/upload_images/4209226-5d25890a3215e920.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="管理控制台"><br><img src="http://upload-images.jianshu.io/upload_images/4209226-4af2c10c021a5aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="域名解析">  </li></ul><p>首先需要进行域名实名认证，未认证不能使用，图中域名状态显示未认证，实名认证很简单在这不多赘述  </p><p>点击解析，进行解析：  </p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-ac7e50bd5bcf5686.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解析设置"><br>点击添加解析，添加两个A记录类型，主机记录都为@，线路默认，记录值为github提供的2个ip：（192.30.252.153、192.30.252.154），再添加一个CNAME类型，主机记录为www，记录值为你的博客地址xx.github.io，最后保存即可。  </p><ul><li>创建CNAME文件  </li></ul><p>上述设置完毕后，在本地仓库xx.github.io目录下的source文件夹中新建CNAME文件，不带任何后缀名，然后再其中放入你的域名地址（xxxx.com），最好写xxx.com而不是www.xxxx.com，这样使用xxx.com或者www.xxx.com都可以访问。</p><p><strong>至此博客算是搭建完毕，这只能算是一个比较粗略的博客，还有很多需要去配置改进的；<br>我查阅了不下十篇文章，其中坑太多，新手容易入坑，为此我把一些该注意的都列举出来，以防止掉坑里。</strong>  </p><blockquote><p>参考文章：<br><a href="http://blog.csdn.net/android_msk/article/details/75040730" target="_blank" rel="external">hexo入门学习（五）：绑定独立域名</a><br><a href="http://www.jianshu.com/p/1ed6abf9d102" target="_blank" rel="external">少撸两局教你搭个博客玩</a><br><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1、hexo是什么：&quot;&gt;&lt;a href=&quot;#1、hexo是什么：&quot; class=&quot;headerlink&quot; title=&quot;1、hexo是什么：&quot;&gt;&lt;/a&gt;1、hexo是什么：&lt;/h1&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown
      
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>更换电脑后hexo博客的搭建</title>
    <link href="http://yoursite.com/2017/10/10/change/"/>
    <id>http://yoursite.com/2017/10/10/change/</id>
    <published>2017-10-10T14:11:33.000Z</published>
    <updated>2017-10-10T14:14:56.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、必须拷贝的文件"><a href="#1、必须拷贝的文件" class="headerlink" title="1、必须拷贝的文件"></a>1、必须拷贝的文件</h1><p>更换电脑后，要想使用hexo搭建的博客，必须在新电脑上搭建hexo环境，大概分为以下几个步骤：  </p><ul><li>拷贝原有电脑本地仓库到新电脑</li><li>新电脑上搭建hexo环境</li><li>组件安装</li><li>部署执行完成  </li></ul><p>必须将你原来电脑上已经配置好并生成的hexo目录拷到你的新电脑上，注意无需拷全部，只拷如下几个目录：  </p><blockquote><p> _config.yml<br>package.json<br>scaffolds/<br>source/<br>themes/  </p></blockquote><h1 id="2、新电脑搭建hexo环境"><a href="#2、新电脑搭建hexo环境" class="headerlink" title="2、新电脑搭建hexo环境"></a>2、新电脑搭建hexo环境</h1><ul><li>安装git，安装node.js  </li><li>打开git bash，输入npm install hexo-cli -g，安装hexo  </li><li>将原来的文件拷贝到新电脑某个目录下  </li><li>切换到新目录下，使用npm install命令进行模块安装（<strong>不能使用hexo init对hexo初始化</strong>）  </li></ul><h1 id="3、组件安装"><a href="#3、组件安装" class="headerlink" title="3、组件安装"></a>3、组件安装</h1><pre><code>npm install hexo-deployer-git --save    为了使用hexo d来部署到git上  npm install hexo-generator-feed --save   为了建立RSS订阅  pm install hexo-generator-sitemap --save  为了建立站点地图  插件安装后，有的需要对配置文件_config.yml进行配置，具体怎么配置，可以参考上面插件在github主页上的具体说明</code></pre><h1 id="4、部署完成"><a href="#4、部署完成" class="headerlink" title="4、部署完成"></a>4、部署完成</h1><p>git bash窗口输入hexo g，再使用hexo d进行部署即可  </p><h1 id="5、添加ssh"><a href="#5、添加ssh" class="headerlink" title="5、添加ssh"></a>5、添加ssh</h1><ul><li><p>打开git bash，在用户主目录下运行：ssh-keygen -t rsa -C “youremail@example.com” 把其中的邮件地址换成自己的邮件地址，然后一路回车  </p></li><li><p>最后完成后，会在用户主目录下生成.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH key密钥对，id_rsa是私钥，千万不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。  </p></li><li><p>登陆GitHub，打开「Settings」-&gt;「SSH and GPG keys」，然后点击「new SSH key」，填上任意Title，在Key文本框里粘贴公钥id_rsa.pub文件的内容（千万不要粘贴成私钥了！），最后点击「Add SSH Key」，你就应该看到已经添加的Key。  </p></li><li>注意：不要在git版本库中运行ssh，然后又将它提交，这样就把密码泄露出去了。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1、必须拷贝的文件&quot;&gt;&lt;a href=&quot;#1、必须拷贝的文件&quot; class=&quot;headerlink&quot; title=&quot;1、必须拷贝的文件&quot;&gt;&lt;/a&gt;1、必须拷贝的文件&lt;/h1&gt;&lt;p&gt;更换电脑后，要想使用hexo搭建的博客，必须在新电脑上搭建hexo环境，大概分为以下
      
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/10/07/hexo-blog/"/>
    <id>http://yoursite.com/2017/10/07/hexo-blog/</id>
    <published>2017-10-07T13:54:15.864Z</published>
    <updated>2017-10-10T14:24:47.143Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: hexo 博客搭建<br>date: 2017-10-07 21:54:15<br>tags:</p><ul><li>hexo</li><li>blog</li><li>git</li><li>github<br>categories: 博客搭建</li></ul><hr><h1 id="1、hexo是什么："><a href="#1、hexo是什么：" class="headerlink" title="1、hexo是什么："></a>1、hexo是什么：</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a href="https://hexo.io" target="_blank" rel="external">hexo官网</a></p><p>  <img src="http://upload-images.jianshu.io/upload_images/4209226-81c675b08828606c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hexo文件目录结构">   </p><h1 id="2、搭建流程："><a href="#2、搭建流程：" class="headerlink" title="2、搭建流程："></a>2、搭建流程：</h1><ul><li>配置搭建环境（含node.js、Git和github账户的申请配置）  </li><li>安装hexo  </li><li>配置hexo</li><li>将hexo与github page联系起来</li><li>发布文章</li><li>主题配置</li><li>博客优化</li><li>绑定域名  </li></ul><h1 id="3、node-js-安装"><a href="#3、node-js-安装" class="headerlink" title="3、node.js 安装"></a>3、node.js 安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[Windows Installer 64-bit](https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi)  </div><div class="line"></div><div class="line">[Windows Installer 32-bit](https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi)</div><div class="line">```  </div><div class="line"></div><div class="line">一路保持默认即可，安装结束后，检查组件是否安装好，同时按win（windows键）+R键，输入cmd（或者在开始输入CMD，右键管理员允许），打开命令窗口。  </div><div class="line">windows运行界面  </div><div class="line"></div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-baa0d92e8171efaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">在命令窗口输入  </div><div class="line">```  </div><div class="line">node -v  </div><div class="line">npm -v  </div><div class="line">```  </div><div class="line">结果如下图，则表示node.js安装成功  </div><div class="line"></div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-bbd2482a705e5094.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line"># 4、 安装Git：  </div><div class="line"></div><div class="line">&gt; [Git官网地址](https://git-scm.com/downloads )</div><div class="line"></div><div class="line">安装默认即可，要注意的是在选择PATH选项时，建议按照下图选择，这样会使得Git在安装的时候会在系统PATH中加入Git的路径，可以直接调用CMD。  </div><div class="line"></div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-1f5aca1e08b652f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class="line"></div><div class="line">检查安装是否正确，输入以下命令：</div></pre></td></tr></table></figure><p>git –version<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-0d1a4891a27a2516.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line"># 5、github账户注册和配置：</div><div class="line"></div><div class="line">&gt; [官网地址](https://github.com/)</div><div class="line"></div><div class="line">输入自己的用户名、邮箱、密码，注册完毕后，一定要去自己注册的邮箱中确认，否则不能使用gh-page。  </div><div class="line"></div><div class="line">&gt; 创建代码库：  </div><div class="line"></div><div class="line">登录进去后，点击右上角的+号，选择New repository：  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-3b18ee9a2345b932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">Repository name（仓库名字）一定要填与自己github账户名一样的名字，不然后续会有些麻烦，此处因为我已经创建了。  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-94ef38a62b1d0e74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">&gt; 代码库设置  </div><div class="line"></div><div class="line">进入你的仓库后，选择setting，如下图所示：  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-62f4ed7e3f3d4953.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">下拉找到Github Pages，找到Source，选择master branch，再点击save保存，过一会会生成一个github pages网址。  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-be4a215f803ca991.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line"># 6、 安装配置hexo：   </div><div class="line">&gt; 安装hexo</div><div class="line"></div><div class="line">打开git brash或者cmd控制台</div><div class="line"></div><div class="line">+ 安装hexo依赖  </div><div class="line"></div><div class="line">```  </div><div class="line">npm install -g hexo-cli</div><div class="line">```  </div><div class="line"></div><div class="line">+ 安装install 组件  </div><div class="line"></div><div class="line">```  </div><div class="line">npm install hexo --save  </div><div class="line">```  </div><div class="line"></div><div class="line">+ 查看版本</div></pre></td></tr></table></figure></p><p>hexo -v<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">如下图所示，则表示安装成功  </div><div class="line">![](http://upload-images.jianshu.io/upload_images/4209226-5c7f26fad73a622e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </div><div class="line"></div><div class="line">&gt; **配置hexo**  </div><div class="line"></div><div class="line">+ hexo初始化</div><div class="line"></div><div class="line">使用命令切换到你需要存放本地仓库的磁盘，然后在磁盘根目录新建文件夹（本地仓库）。</div><div class="line">假如你在E盘根目录新建一个文件夹（**此处文件夹名必须和你的github新建的仓库名（Repository name）一致）</div><div class="line">```  </div><div class="line">E:    #切换到E盘</div><div class="line">hexo init xx.github.io     #新建本地仓库  </div><div class="line">```  </div><div class="line">初始化完毕后，在E盘根目录会看到一个xx.github.io的文件夹，这就是你的本地仓库。  </div><div class="line"></div><div class="line">+ 安装npm包  </div><div class="line"></div><div class="line">```  </div><div class="line">npm install</div></pre></td></tr></table></figure></p><ul><li>生成  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hexo g   #hexo g 是hexo generate的简写  </div><div class="line">```  </div><div class="line"></div><div class="line">+ 启动服务预览  </div><div class="line"></div><div class="line">```  </div><div class="line">hexo s   #hexo s 是hexo server的简写</div></pre></td></tr></table></figure><p>上述也可以写成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">hexo s -g  </div><div class="line">```  </div><div class="line">当完成上述操作后提示如下，即可访问http:localhost:4000/  </div><div class="line">```  </div><div class="line">INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.  </div><div class="line">```  </div><div class="line"></div><div class="line">&gt; **填坑**  </div><div class="line"></div><div class="line">理论上到此处就可以访问http:localhost:4000/，但是事与愿违，4000端口往往被占用，导致不能访问，不过官方也给出了解决方法:https://hexo.io/zh-cn/docs/server.html#自定义-IP  </div><div class="line">hexo3.0后的版本，由于服务器是独立成个别模块，所以首先需要安装hexo-server  </div><div class="line">```  </div><div class="line">npm install hexo-server --save</div><div class="line"></div><div class="line">```  </div><div class="line">安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。  </div><div class="line">```  </div><div class="line">hexo server</div></pre></td></tr></table></figure></p><p>再更改端口  </p><pre><code>hexo server -p 5000 #更改为5000端口</code></pre><p>在浏览器输入http:localhost:5000/即可访问  </p><h1 id="7、将hexo和github关联起来："><a href="#7、将hexo和github关联起来：" class="headerlink" title="7、将hexo和github关联起来："></a>7、将hexo和github关联起来：</h1><ul><li>配置git个人信息：  </li></ul><p>第一次使用git的话，需要配置用户名与邮箱地址：  </p><pre><code>git config --global user.name &quot;XXX&quot;git config --global user.email &quot;XXX@XXXcom&quot;</code></pre><p>检查是否有SSH，没有的话需要在github新建  </p><pre><code>cd ~/.ssh   #检查ls          #查看</code></pre><p>如果有的话，会有两个文件，如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4209226-6d009cf4c555c0c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>生成新的密钥  </li></ul><pre><code>ssh-keygen -t rsa -C &quot;XXX@XXXcom&quot;</code></pre><ul><li>将SSH Key 添加到ssh-agent</li></ul><pre><code>eval $(ssh-agent -s)</code></pre><ul><li>查看SSH返回路径  </li></ul><pre><code>ssh-add ~/.ssh/id_rsa</code></pre><p>添加成功，会返回路径  </p><pre><code>Identity added: /c/User/Administator/.ssh/id_rsa (/c/Users/Administator/.ssh/id_rsa)</code></pre><p>根据地址找到这两个文件<br><img src="http://upload-images.jianshu.io/upload_images/4209226-f2be6983ecb919db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>把SSH添加到github上  </li></ul><p>打开github，右上角选择setting，再选择SSH and GPG keys，选择New SSH key（添加SSH key），将id_rsa.pub的文件拷贝到key中，最后Add SSH key即可。</p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-6915fe56cf8f835c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>验证SSH  </li></ul><pre><code>ssh -T git@github.com</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/4209226-796dd612749d9951.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p><ul><li>配置Deployment  </li></ul><p>找到本地仓库（xx.github.io）,打开找到_config.yml文件，（建议使用Notepad++编辑），再找到deploy，配置如下：<br><img src="http://upload-images.jianshu.io/upload_images/4209226-8241abfce57fb23e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>git@github.com都是一致的，后面的则分别是github帐户名、仓库名<br>图上coding地址为使用coding加速后才添加的，此处可不添加<br>修改完毕后保存，并使用命令保存，否则报错：  </p><pre><code>npm install hexo-deployer-git --save</code></pre><h1 id="8、发布文章-："><a href="#8、发布文章-：" class="headerlink" title="8、发布文章 ："></a>8、发布文章 ：</h1><ul><li>新建一篇名为article title的博客：  <pre><code>hexo new post &quot;article title&quot;</code></pre>在我的电脑的目录下 E:\xx.github.io\source\ _posts 将会看到 article title.md 文件（打开.md文件，windows推荐使用markdownpad2）  </li><li>生成部署：  <pre><code>hexo clean  hexo g                 #生成hexo d                 #部署  hexo d -g            #也可以只有一步，在部署前先生成</code></pre>部署完毕后即可访问博客：<a href="https://xx.github.io/" target="_blank" rel="external">https://xx.github.io/</a>  </li></ul><h1 id="9、主题配置："><a href="#9、主题配置：" class="headerlink" title="9、主题配置："></a>9、主题配置：</h1><blockquote><p>详情请见这篇文章：<a href="http://www.jianshu.com/p/d350dec39078" target="_blank" rel="external">NexT主题配置</a>  </p></blockquote><h1 id="10、博客优化："><a href="#10、博客优化：" class="headerlink" title="10、博客优化："></a>10、博客优化：</h1><p>由于诸多原因导致国内访问github速度很慢，有时更新一篇博客，或者改动一些配置，需要很长时间才能加载出来，所以我们可以对博客进行一些优化，提高加载速度。<br>详情请见下面这篇文章：  </p><blockquote><p><a href="http://www.jianshu.com/p/414ca84237ea" target="_blank" rel="external">http://www.jianshu.com/p/414ca84237ea</a>  </p></blockquote><h1 id="11、绑定域名："><a href="#11、绑定域名：" class="headerlink" title="11、绑定域名："></a>11、绑定域名：</h1><p>一般使用hexo搭建博客后，博客地址大多为：<a href="https://xx.github.io之类，一来是不好听没有个性，二来是不方便管理，三是速度慢。" target="_blank" rel="external">https://xx.github.io之类，一来是不好听没有个性，二来是不方便管理，三是速度慢。</a>  </p><blockquote><p>购买域名  </p></blockquote><p><strong>比如国外的：<a href="https://www.godaddy.com/" target="_blank" rel="external">godaddy</a>、<a href="http://name.com/" target="_blank" rel="external">Name</a>等；国内的：或<a href="http://www.xinnet.com/" target="_blank" rel="external">新网</a>、<a href="http://www.xinnet.com/" target="_blank" rel="external">万网</a>、<a href="http://www.iisp.com/" target="_blank" rel="external">耐思尼克</a></strong>……<br>我是选择的阿里云（万网），以下介绍的也是阿里云的域名：<br>输入你 想要的域名，选择未注册的域名，有不同的套餐，一年几年。  </p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-5af5b534d2890bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="购买域名">  </p><ul><li>域名解析<br><img src="http://upload-images.jianshu.io/upload_images/4209226-5d25890a3215e920.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="管理控制台"><br><img src="http://upload-images.jianshu.io/upload_images/4209226-4af2c10c021a5aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="域名解析">  </li></ul><p>首先需要进行域名实名认证，未认证不能使用，图中域名状态显示未认证，实名认证很简单在这不多赘述  </p><p>点击解析，进行解析：  </p><p><img src="http://upload-images.jianshu.io/upload_images/4209226-ac7e50bd5bcf5686.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解析设置"><br>点击添加解析，添加两个A记录类型，主机记录都为@，线路默认，记录值为github提供的2个ip：（192.30.252.153、192.30.252.154），再添加一个CNAME类型，主机记录为www，记录值为你的博客地址xx.github.io，最后保存即可。  </p><ul><li>创建CNAME文件  </li></ul><p>上述设置完毕后，在本地仓库xx.github.io目录下的source文件夹中新建CNAME文件，不带任何后缀名，然后再其中放入你的域名地址（xxxx.com），最好写xxx.com而不是www.xxxx.com，这样使用xxx.com或者www.xxx.com都可以访问。</p><p><strong>至此博客算是搭建完毕，这只能算是一个比较粗略的博客，还有很多需要去配置改进的；<br>我查阅了不下十篇文章，其中坑太多，新手容易入坑，为此我把一些该注意的都列举出来，以防止掉坑里。</strong>  </p><blockquote><p>参考文章：<br><a href="http://blog.csdn.net/android_msk/article/details/75040730" target="_blank" rel="external">hexo入门学习（五）：绑定独立域名</a><br><a href="http://www.jianshu.com/p/1ed6abf9d102" target="_blank" rel="external">少撸两局教你搭个博客玩</a><br><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: hexo 博客搭建&lt;br&gt;date: 2017-10-07 21:54:15&lt;br&gt;tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hexo&lt;/li&gt;
&lt;li&gt;blog&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;github&lt;br&gt;categories: 博
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test1</title>
    <link href="http://yoursite.com/2017/09/20/test1/"/>
    <id>http://yoursite.com/2017/09/20/test1/</id>
    <published>2017-09-20T05:29:11.000Z</published>
    <updated>2017-09-20T05:33:28.091Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="test1" scheme="http://yoursite.com/tags/test1/"/>
    
      <category term="one" scheme="http://yoursite.com/tags/one/"/>
    
      <category term="two" scheme="http://yoursite.com/tags/two/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2017/09/19/test/"/>
    <id>http://yoursite.com/2017/09/19/test/</id>
    <published>2017-09-19T13:46:39.000Z</published>
    <updated>2017-09-19T13:49:32.424Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Testing" scheme="http://yoursite.com/tags/Testing/"/>
    
      <category term="Another Tag" scheme="http://yoursite.com/tags/Another-Tag/"/>
    
  </entry>
  
</feed>
